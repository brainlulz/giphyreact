{"version":3,"sources":["components/Error/index.js","components/Error/Error.js","components/UI/NoMatch/NoMatch.js","components/UI/Home/Home.js","components/Header/Title/index.js","components/Header/Title/Title.js","components/Header/FavoritedBtn/index.js","components/Header/FavoritedBtn/FavoritedBtn.js","components/Header/index.js","components/Header/Header.js","actions/index.js","constants/actionTypes/index.js","Utilities/index.js","components/Results/Modal/Modal.js","components/Results/Result/index.js","components/Results/Result/Result.js","components/Results/index.js","components/Results/Results.js","container/ResultsGifs.js","components/Search/index.js","components/Search/Search.js","container/SearchGifs.js","components/App.js","container/App.js","registerServiceWorker.js","reducers/favorites.js","reducers/search.js","reducers/index.js","index.js","Utilities/favoritesUtils.js"],"names":["Error","react_default","a","createElement","className","src","alt","NoMatch","Home","Title","es","to","FavoritedBtn","activeClassName","Header","Header_Title","Header_FavoritedBtn","changeValue","value","type","payload","getGifs","dispatch","fetch","concat","makeFetchGifsUrl","then","response","search_start","status","json","Promise","reject","data","recievedData","catch","error","search_error","Modal","_ref","gif","onToggleFavorite","hrefLink","onClick","id","href","target","rel","Result","gifInfo","favorited","Results_Modal_Modal","url","classNames","images","fixed_height_downsampled","slug","Results","resultType","favorites","searchResults","toggleFavorites","favoriteIndexes","map","fav","gifs","Results_Result","key","indexOf","mapDispatchToProps","favorite","ResultsGifs","withRouter","connect","state","search","results","Search","history","onSubmit","event","preventDefault","searchParams","URLSearchParams","set","push","pathname","toString","onChange","evt","SearchGifs","getValueFromQuerySearchParams","get","App","this","props","location","nextProps","_this","components_Header","container_SearchGifs","exact","path","component","render","container_ResultsGifs","handleToggleFavorite","Fragment","Component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","arguments","length","undefined","action","find","filter","Object","toConsumableArray","initialState","loading","objectSpread","gifApp","combineReducers","favoritesStr","localStorage","getItem","JSON","parse","loadFavorites","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","oldFavorites","subscribe","favoritedGifs","getState","setItem","stringify","ReactDOM","react_redux_es","container_App","document","getElementById","URL","process","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e84f863.chunk.js","sourcesContent":["import Error from './Error';\nexport default Error;","import React from \"react\";\n\nimport \"./Error.css\";\n\nconst Error = () => {\n  return (\n    <div className=\"Error\">\n    <p>Oh dear, an error occured...</p>\n      <img\n        src=\"https://image.noelshack.com/fichiers/2018/09/2/1519745155-sad-grumpy-cat-by-yami-joey-d64r332.png\"\n        alt=\"broken\"\n      />\n    </div>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport './NoMatch.css';\n\nconst NoMatch = () => (\n  <div className=\"NoMatch\">\n    <p>You're looking for something that doesn't exist dude.</p>\n    <img\n      src=\"https://media.giphy.com/media/3o7bu8fP6eeVGuB6G4/giphy.gif\"\n      alt=\"getBack2Work\"\n    />\n  </div>\n);\n\nexport default NoMatch;","import React from 'react';\nimport './Home.css';\n\nconst Home = () => (\n    <div className=\"Home\">\n    <p>Oh, hi dude.</p>\n    </div>\n)\n\nexport default Home;","import Title from './Title';\nexport default Title;","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport \"./Title.css\";\n\nconst Title = () => (\n    <h1 className=\"Title\">\n        <NavLink className=\"link\" to=\"/\">\n            Gif or Gif\n        </NavLink>\n    </h1>\n);\n\nexport default Title;\n","import FavoritedBtn from './FavoritedBtn';\nexport default FavoritedBtn;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './FavoritedBtn.css';\n\nconst Favorited = () => {\n  return (\n    <div className=\"FavoritedBtn\">\n      <NavLink to=\"/favorited\" activeClassName=\"selected\">\n        Favorited\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Favorited;\n","import Header from './Header';\nexport default Header;","import React from \"react\";\nimport Title from \"./Title\";\nimport FavoritedBtn from \"./FavoritedBtn\";\n\nimport \"./Header.css\";\n\nconst header = () => {\n  return (\n    <div className=\"Header\">      \n      <Title />\n      <FavoritedBtn/>\n    </div>\n  );\n};\n\nexport default header;\n","import { makeFetchGifsUrl } from '../Utilities';\nimport {\n  TOGGLE_FAVS,\n  SEARCH_START,\n  SEARCH_SUCCESS,\n  SEARCH_ERROR,\n  CHANGE_VALUE\n} from '../constants/actionTypes';\n\nexport const toggleFavs = favorite => {\n  return {\n    type: TOGGLE_FAVS,\n    favorite\n  };\n};\n\nexport const changeValue = value => {\n  return {\n    type: CHANGE_VALUE,\n    payload: value\n  };\n};\n\nexport const search_start = value => {\n  return {\n    type: SEARCH_START,\n    payload: value\n  };\n};\n\nexport const search_success = payload => {\n  return {\n    type: SEARCH_SUCCESS,\n    payload\n  };\n};\n\nexport const search_error = error => {\n  return {\n    type: SEARCH_ERROR,\n    payload: error\n  };\n};\n\nexport const getGifs = value => {\n  return dispatch => {\n    return fetch(makeFetchGifsUrl(value))\n      .then(response => {\n        dispatch(search_start(value));\n        if (response.status === 200) {\n          return response.json();\n        }\n        return Promise.reject({ status: response.status });\n      })\n      .then(data => {\n        const recievedData = data.data;\n        dispatch(search_success(recievedData));\n      })\n      .catch(error => {\n        dispatch(search_error(error));\n      });\n  };\n};\n","export const TOGGLE_FAVS = \"TOGGLE_FAVS\";\nexport const SEARCH_START = \"SEARCH_START\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_ERROR = \"SEARCH_ERROR\";\nexport const CHANGE_VALUE = \"CHANGE_VALUE\";\nexport const INPUT_CHANGE = \"INPUT_CHANGE\";","export const makeFetchGifsUrl = value =>\n  `https://api.giphy.com/v1/gifs/search?q=${value}&api_key=vw4usscjAkDQiPbUvnGdRJfpEUWqZsuY`;\n","import React from \"react\";\n\nimport \"./Modal.css\";\n\nconst Modal = ({ gif, onToggleFavorite, hrefLink }) => {\n  return (\n    <div className=\"Modal\">\n      <button className=\"FavBtn\" onClick={() => onToggleFavorite(gif)} id={gif.id}/>\n      <a href={hrefLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        Link\n      </a>\n    </div>\n  );\n};\nexport default Modal;\n","import Result from './Result';\nexport default Result;","import React from \"react\";\nimport classNames from 'classnames';\nimport \"./Result.css\";\n\nimport Modal from \"../Modal/Modal\";\n\nconst Result = ({ gifInfo, onToggleFavorite, favorited }) => (\n  <div className=\"Result\">\n    <Modal\n      onToggleFavorite={onToggleFavorite}\n      hrefLink={gifInfo.url}\n      gif={gifInfo}\n    />\n    <img\n      className={classNames('ResultImage', {\n        favorited,\n      })}\n      id={gifInfo.id}\n      src={gifInfo.images.fixed_height_downsampled.url}\n      alt={gifInfo.slug}\n    />\n  </div>\n);\n\nexport default Result;\n","import Results from './Results';\nexport default Results;","import React from \"react\";\nimport \"./Results.css\";\n\nimport Result from \"./Result\";\n\nconst Results = ({ resultType, favorites, searchResults, toggleFavorites }) => {\n  const favoriteIndexes = favorites.map(fav => fav.id);\n  const gifs = resultType === \"favorites\" ? favorites : searchResults;\n\n  if (!gifs) {\n    return <div>Search a gif !</div>;\n  }\n\n  return (\n    <div className=\"Results\">\n      {gifs.map(gif => (\n        <Result\n          key={gif.id}\n          gifInfo={gif}\n          onToggleFavorite={toggleFavorites}\n          favorited={favoriteIndexes.indexOf(gif.id) !== -1}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Results;\n","import { connect } from \"react-redux\";\nimport { toggleFavs } from \"../actions\";\nimport { withRouter } from 'react-router-dom';\nimport Results from \"../components/Results\";\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites,\n    searchResults: state.search.results\n  };\n};\n\nconst mapDispatchToProps = { toggleFavorites: toggleFavs };\n\nconst ResultsGifs = withRouter(connect(mapStateToProps, mapDispatchToProps)(Results));\n\nexport default ResultsGifs;\n","import Search from './Search';\nexport default Search;","import React from 'react';\nimport './Search.css';\n\nconst Search = ({ value, changeValue, getGifs, history }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchParams = new URLSearchParams();\n    searchParams.set('q', value);\n    history.push({\n      pathname: '/search',\n      search: searchParams.toString()\n    });\n    return getGifs(value);\n  };\n  return (\n    <div className=\"Search\">\n      <div className=\"SearchBar\">\n        <form id=\"form\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SubmitBtn\" />\n          <input\n            type=\"search\"\n            onChange={evt => changeValue(evt.target.value)}\n            value={value}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeValue, getGifs } from '../actions';\nimport Search from '../components/Search';\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search,\n    value: state.search.value,\n    results: state.search.results\n  };\n};\nconst mapDispatchToProps = { getGifs, changeValue };\n\nconst SearchGifs = withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));\n\nexport default SearchGifs;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Error from './Error';\nimport NoMatch from './UI/NoMatch/NoMatch';\nimport Home from './UI/Home/Home';\nimport Header from './Header';\nimport ResultsGifs from '../container/ResultsGifs';\nimport SearchGifs from '../container/SearchGifs';\n\nconst getValueFromQuerySearchParams = search => {\n  const queryParams = new URLSearchParams(search);\n  return queryParams.get('q');\n};\n\nclass App extends Component {\n  componentDidMount(event) {\n    if (this.props.location.search) {\n      const value = getValueFromQuerySearchParams(this.props.location.search);\n      this.props.changeValue(value);\n      this.props.getGifs(value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.location.search &&\n      nextProps.location.search !== this.props.location.search\n    ) {\n      const value = getValueFromQuerySearchParams(nextProps.location.search);\n      this.props.changeValue(value);\n      this.props.getGifs(value);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchGifs />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/favorited\"\n            render={() => (\n              <ResultsGifs\n                resultType=\"favorites\"\n                onToggleFavorite={this.handleToggleFavorite}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`/search`}\n            render={() => (\n              <React.Fragment>\n                {/* <ResultsNumber number={this.props.search.results.length} /> */}\n                <ResultsGifs\n                  resultType=\"search\"\n                  searchResults={this.results}\n                  onToggleFavorite={this.handleToggleFavorite}\n                />\n              </React.Fragment>\n            )}\n          />\n          <Route exact path={'/error'} component={Error} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from '../components/App';\nimport { withRouter } from 'react-router-dom';\nimport { getGifs, changeValue } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n      value: state.search.value\n  };\n};\n\nconst mapDispatchToProps = { getGifs, changeValue };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { TOGGLE_FAVS } from \"../constants/actionTypes\";\n\nconst favorites = (state = [], action) => {\n  switch (action.type) {\n    case TOGGLE_FAVS:\n      const isFavorite = state.find(fav => fav.id === action.favorite.id);\n      if (isFavorite) {\n        // remove favorite\n        return state.filter(fav => fav.id !== action.favorite.id);\n      } else {\n        // add favorite\n        return [...state, action.favorite];\n      }\n    default:\n      return state;\n  }\n};\n\nexport default favorites;\n","import {\n  SEARCH_START,\n  SEARCH_ERROR,\n  SEARCH_SUCCESS,\n  CHANGE_VALUE\n} from \"../constants/actionTypes\";\n\nconst initialState = {\n  value: \"\",\n  loading: false,\n  results: [],\n  error: null\n};\n\nconst search = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_VALUE:\n      return {\n        ...state,\n        value: action.payload\n      };\n    case SEARCH_START:\n      return {\n        ...state, \n        loading: true\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        results: action.payload\n      };\n    case SEARCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default search;\n","import { combineReducers } from \"redux\";\nimport favorites from \"./favorites\";\nimport search from \"./search\";\n\nconst gifApp = combineReducers({\n  favorites,\n  search\n});\n\nexport default gifApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './container/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducers from './reducers';\nimport { loadFavorites, saveFavorites } from './Utilities/favoritesUtils';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  favorites: loadFavorites()\n};\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(reducers, initialState, enhancer);\n\nlet oldFavorites = initialState.favorites;\n\nstore.subscribe(() => {\n  const { favorites } = store.getState();\n  if (oldFavorites !== favorites) {\n    saveFavorites(favorites);\n    oldFavorites = favorites;\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","\nexport const  saveFavorites = (favoritedGifs) => {\n  localStorage.setItem(\"favorites\", JSON.stringify(favoritedGifs));\n};\n\nexport const loadFavorites = () => {\n  const favoritesStr = localStorage.getItem(\"favorites\");\n  if (favoritesStr) {\n    return JSON.parse(favoritesStr);\n  }\n  return [];\n}\n\n"],"sourceRoot":""}